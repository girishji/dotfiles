--- manually added ---
self
object
__add__
__copy__(
__del__(
__doc__
__file__
__future__
__get__(
__getitem__(
__name__
__main__
__init__(
__iter__(
__import__(
__set__(
__setitem__(
__str__(
__unicode__(
__version__
--- String type attributes and methods. (manually entered). Only works with quotes, not objects. e.g. 'foo'.startswith(  ---
.capitalize(
.center(
.count(
.decode(
.encode(
.endswith(
.expandtabs(
.find(
.format(
.index(
.isalnum(
.isalpha(
.isdigit(
.islower(
.isspace(
.istitle(
.isupper(
.join(
.ljust(
.lower(
.lstrip(
.partition(
.replace(
.rfind(
.rindex(
.rjust(
.rpartition(
.rsplit(
.rstrip(
.split(
.startswith(
.splitlines(
.strip(
.swapcase(
.title(
.translate(
.upper(
.zfill(
--- str builtin attributes and methods. (Manually entered). e.g. str.startswith(  ---
str.capitalize(
str.center(
str.count(
str.decode(
str.encode(
str.endswith(
str.expandtabs(
str.find(
str.format(
str.index(
str.isalnum(
str.isalpha(
str.isdigit(
str.islower(
str.isspace(
str.istitle(
str.isupper(
str.join(
str.ljust(
str.lower(
str.lstrip(
str.partition(
str.replace(
str.rfind(
str.rindex(
str.rjust(
str.rpartition(
str.rsplit(
str.rstrip(
str.split(
str.splitlines(
str.startswith(
str.strip(
str.swapcase(
str.title(
str.translate(
str.upper(
str.zfill(
--- exception heirarchy (:Help exceptions) ---
BaseException
SystemExit
KeyboardInterrupt
GeneratorExit
Exception
StopIteration
StopAsyncIteration
ArithmeticError
FloatingPointError
OverflowError
ZeroDivisionError
AssertionError
AttributeError
BufferError
EOFError
ImportError
ModuleNotFoundError
LookupError
IndexError
KeyError
MemoryError
NameError
UnboundLocalError
OSError
BlockingIOError
ChildProcessError
ConnectionError
BrokenPipeError
ConnectionAbortedError
ConnectionRefusedError
ConnectionResetError
FileExistsError
FileNotFoundError
InterruptedError
IsADirectoryError
NotADirectoryError
PermissionError
ProcessLookupError
TimeoutError
ReferenceError
RuntimeError
NotImplementedError
RecursionError
SyntaxError
IndentationError
TabError
SystemError
TypeError
ValueError
UnicodeError
UnicodeDecodeError
UnicodeEncodeError
UnicodeTranslateError
Warning
DeprecationWarning
PendingDeprecationWarning
RuntimeWarning
SyntaxWarning
UserWarning
FutureWarning
ImportWarning
UnicodeWarning
BytesWarning
ResourceWarning
--- reserved words (py3.11.7) ---
False
None
True
and
as
assert
async
await
break
class
continue
def
del
elif
else
except
finally
for
from
global
if
import
in
is
lambda
nonlocal
not
or
pass
raise
return
try
while
with
yield
--- from builtins import * ---
abs(
aiter(
all(
anext(
any(
ascii(
bin(
bool(
breakpoint(
bytearray(
bytes(
callable(
chr(
classmethod(
compile(
complex(
copyright(
credits(
delattr(
dict(
dir(
divmod(
enumerate(
eval(
exec(
exit(
filter(
float(
format(
frozenset(
getattr(
globals(
hasattr(
hash(
help(
hex(
id(
input(
int(
isinstance(
issubclass(
iter(
len(
license(
list(
locals(
map(
max(
memoryview(
min(
next(
object(
oct(
open(
ord(
pow(
print(
property(
quit(
range(
repr(
reversed(
round(
set(
setattr(
slice(
sorted(
staticmethod(
str(
sum(
super(
tuple(
type(
vars(
zip(
ArithmeticError
AssertionError
AttributeError
BaseException
BaseExceptionGroup
BlockingIOError
BrokenPipeError
BufferError
BytesWarning
ChildProcessError
ConnectionAbortedError
ConnectionError
ConnectionRefusedError
ConnectionResetError
DeprecationWarning
EOFError
Ellipsis
EncodingWarning
EnvironmentError
Exception
ExceptionGroup
False
FileExistsError
FileNotFoundError
FloatingPointError
FutureWarning
GeneratorExit
IOError
ImportError
ImportWarning
IndentationError
IndexError
InterruptedError
IsADirectoryError
KeyError
KeyboardInterrupt
LookupError
MemoryError
ModuleNotFoundError
NameError
None
NotADirectoryError
NotImplemented
NotImplementedError
OSError
OverflowError
PendingDeprecationWarning
PermissionError
ProcessLookupError
RecursionError
ReferenceError
ResourceWarning
RuntimeError
RuntimeWarning
StopAsyncIteration
StopIteration
SyntaxError
SyntaxWarning
SystemError
SystemExit
TabError
TimeoutError
True
TypeError
UnboundLocalError
UnicodeDecodeError
UnicodeEncodeError
UnicodeError
UnicodeTranslateError
UnicodeWarning
UserWarning
ValueError
Warning
ZeroDivisionError
--- import collections (py3.11.7/darwin/root module) ---
collections
collections.abc
collections.defaultdict(
collections.deque(
collections.namedtuple(
collections.ChainMap(
collections.Counter(
collections.OrderedDict(
collections.UserDict(
collections.UserList(
collections.UserString(
--- from collections import * ---
abc
defaultdict(
deque(
namedtuple(
ChainMap(
Counter(
OrderedDict(
UserDict(
UserList(
UserString(
--- import collections.abc ---
collections.abc
collections.abc.AsyncGenerator(
collections.abc.AsyncIterable(
collections.abc.AsyncIterator(
collections.abc.Awaitable(
collections.abc.ByteString(
collections.abc.Callable(
collections.abc.Collection(
collections.abc.Container(
collections.abc.Coroutine(
collections.abc.Generator(
collections.abc.Hashable(
collections.abc.ItemsView(
collections.abc.Iterable(
collections.abc.Iterator(
collections.abc.KeysView(
collections.abc.Mapping(
collections.abc.MappingView(
collections.abc.MutableMapping(
collections.abc.MutableSequence(
collections.abc.MutableSet(
collections.abc.Reversible(
collections.abc.Sequence(
collections.abc.Set(
collections.abc.Sized(
collections.abc.ValuesView(
--- from collections import abc ---
abc
abc.AsyncGenerator(
abc.AsyncIterable(
abc.AsyncIterator(
abc.Awaitable(
abc.ByteString(
abc.Callable(
abc.Collection(
abc.Container(
abc.Coroutine(
abc.Generator(
abc.Hashable(
abc.ItemsView(
abc.Iterable(
abc.Iterator(
abc.KeysView(
abc.Mapping(
abc.MappingView(
abc.MutableMapping(
abc.MutableSequence(
abc.MutableSet(
abc.Reversible(
abc.Sequence(
abc.Set(
abc.Sized(
abc.ValuesView(
--- from collections.abc import * ---
AsyncGenerator(
AsyncIterable(
AsyncIterator(
Awaitable(
ByteString(
Callable(
Collection(
Container(
Coroutine(
Generator(
Hashable(
ItemsView(
Iterable(
Iterator(
KeysView(
Mapping(
MappingView(
MutableMapping(
MutableSequence(
MutableSet(
Reversible(
Sequence(
Set(
Sized(
ValuesView(
--- import functools (py3.11.7/darwin/root module) ---
functools
functools.cache(
functools.cached_property(
functools.cmp_to_key(
functools.get_cache_token(
functools.lru_cache(
functools.namedtuple(
functools.partial(
functools.partialmethod(
functools.recursive_repr(
functools.reduce(
functools.singledispatch(
functools.singledispatchmethod(
functools.total_ordering(
functools.update_wrapper(
functools.wraps(
functools.GenericAlias(
functools.RLock(
functools.WRAPPER_ASSIGNMENTS
functools.WRAPPER_UPDATES
--- from functools import * ---
cache(
cached_property(
cmp_to_key(
get_cache_token(
lru_cache(
namedtuple(
partial(
partialmethod(
recursive_repr(
reduce(
singledispatch(
singledispatchmethod(
total_ordering(
update_wrapper(
wraps(
GenericAlias(
RLock(
WRAPPER_ASSIGNMENTS
WRAPPER_UPDATES
--- import itertools (py3.11.7/darwin/root module) ---
itertools
itertools.accumulate(
itertools.chain(
itertools.combinations(
itertools.combinations_with_replacement(
itertools.compress(
itertools.count(
itertools.cycle(
itertools.dropwhile(
itertools.filterfalse(
itertools.groupby(
itertools.islice(
itertools.pairwise(
itertools.permutations(
itertools.product(
itertools.repeat(
itertools.starmap(
itertools.takewhile(
itertools.tee(
itertools.zip_longest(
--- from itertools import * ---
accumulate(
chain(
combinations(
combinations_with_replacement(
compress(
count(
cycle(
dropwhile(
filterfalse(
groupby(
islice(
pairwise(
permutations(
product(
repeat(
starmap(
takewhile(
tee(
zip_longest(
Couldn't import: md5. No module named 'md5'
--- import bisect (py3.11.7/darwin/root module) ---
bisect
bisect.bisect(
bisect.bisect_left(
bisect.bisect_right(
bisect.insort(
bisect.insort_left(
bisect.insort_right(
--- import copy (py3.11.7/darwin/root module) ---
copy
copy.copy(
copy.deepcopy(
copy.dispatch_table
copy.error
copy.Error
--- import doctest (py3.11.7/darwin/root module) ---
doctest
doctest.debug(
doctest.debug_script(
doctest.debug_src(
doctest.difflib
doctest.inspect
doctest.linecache
doctest.master
doctest.namedtuple(
doctest.os
doctest.pdb
doctest.re
doctest.register_optionflag(
doctest.run_docstring_examples(
doctest.script_from_examples(
doctest.set_unittest_reportflags(
doctest.sys
doctest.testfile(
doctest.testmod(
doctest.testsource(
doctest.traceback
doctest.unittest
doctest.BLANKLINE_MARKER
doctest.COMPARISON_FLAGS
doctest.DONT_ACCEPT_BLANKLINE
doctest.DONT_ACCEPT_TRUE_FOR_1
doctest.DebugRunner(
doctest.DocFileCase(
doctest.DocFileSuite(
doctest.DocFileTest(
doctest.DocTest(
doctest.DocTestCase(
doctest.DocTestFailure
doctest.DocTestFinder(
doctest.DocTestParser(
doctest.DocTestRunner(
doctest.DocTestSuite(
doctest.ELLIPSIS
doctest.ELLIPSIS_MARKER
doctest.Example(
doctest.FAIL_FAST
doctest.IGNORE_EXCEPTION_DETAIL
doctest.IncrementalNewlineDecoder(
doctest.NORMALIZE_WHITESPACE
doctest.OPTIONFLAGS_BY_NAME
doctest.OutputChecker(
doctest.REPORTING_FLAGS
doctest.REPORT_CDIFF
doctest.REPORT_NDIFF
doctest.REPORT_ONLY_FIRST_FAILURE
doctest.REPORT_UDIFF
doctest.SKIP
doctest.SkipDocTestCase(
doctest.StringIO(
doctest.TestResults(
doctest.UnexpectedException
--- import heapq (py3.11.7/darwin/root module) ---
heapq
heapq.heapify(
heapq.heappop(
heapq.heappush(
heapq.heappushpop(
heapq.heapreplace(
heapq.merge(
heapq.nlargest(
heapq.nsmallest(
--- import inspect (py3.11.7/darwin/root module) ---
inspect
inspect.abc
inspect.ast
inspect.attrgetter(
inspect.builtins
inspect.classify_class_attrs(
inspect.cleandoc(
inspect.collections
inspect.currentframe(
inspect.dis
inspect.enum
inspect.findsource(
inspect.formatannotation(
inspect.formatannotationrelativeto(
inspect.formatargvalues(
inspect.functools
inspect.get_annotations(
inspect.getabsfile(
inspect.getargs(
inspect.getargvalues(
inspect.getattr_static(
inspect.getblock(
inspect.getcallargs(
inspect.getclasstree(
inspect.getclosurevars(
inspect.getcomments(
inspect.getcoroutinelocals(
inspect.getcoroutinestate(
inspect.getdoc(
inspect.getfile(
inspect.getframeinfo(
inspect.getfullargspec(
inspect.getgeneratorlocals(
inspect.getgeneratorstate(
inspect.getinnerframes(
inspect.getlineno(
inspect.getmembers(
inspect.getmembers_static(
inspect.getmodule(
inspect.getmodulename(
inspect.getmro(
inspect.getouterframes(
inspect.getsource(
inspect.getsourcefile(
inspect.getsourcelines(
inspect.importlib
inspect.indentsize(
inspect.isabstract(
inspect.isasyncgen(
inspect.isasyncgenfunction(
inspect.isawaitable(
inspect.isbuiltin(
inspect.isclass(
inspect.iscode(
inspect.iscoroutine(
inspect.iscoroutinefunction(
inspect.isdatadescriptor(
inspect.isframe(
inspect.isfunction(
inspect.isgenerator(
inspect.isgeneratorfunction(
inspect.isgetsetdescriptor(
inspect.iskeyword(
inspect.ismemberdescriptor(
inspect.ismethod(
inspect.ismethoddescriptor(
inspect.ismethodwrapper(
inspect.ismodule(
inspect.isroutine(
inspect.istraceback(
inspect.itertools
inspect.linecache
inspect.modulesbyfile
inspect.namedtuple(
inspect.os
inspect.re
inspect.signature(
inspect.stack(
inspect.sys
inspect.token
inspect.tokenize
inspect.trace(
inspect.types
inspect.unwrap(
inspect.walktree(
inspect.ArgInfo(
inspect.Arguments(
inspect.Attribute(
inspect.BlockFinder(
inspect.BoundArguments(
inspect.CORO_CLOSED
inspect.CORO_CREATED
inspect.CORO_RUNNING
inspect.CORO_SUSPENDED
inspect.CO_ASYNC_GENERATOR
inspect.CO_COROUTINE
inspect.CO_GENERATOR
inspect.CO_ITERABLE_COROUTINE
inspect.CO_NESTED
inspect.CO_NEWLOCALS
inspect.CO_NOFREE
inspect.CO_OPTIMIZED
inspect.CO_VARARGS
inspect.CO_VARKEYWORDS
inspect.ClassFoundException
inspect.ClosureVars(
inspect.EndOfBlock
inspect.FrameInfo(
inspect.FullArgSpec(
inspect.GEN_CLOSED
inspect.GEN_CREATED
inspect.GEN_RUNNING
inspect.GEN_SUSPENDED
inspect.OrderedDict(
inspect.Parameter(
inspect.Signature(
inspect.TPFLAGS_IS_ABSTRACT
inspect.Traceback(
--- import keyword (py3.11.7/darwin/root module) ---
keyword
keyword.iskeyword(
keyword.issoftkeyword(
keyword.kwlist
keyword.softkwlist
--- import math (py3.11.7/darwin/root module) ---
math
math.acos(
math.acosh(
math.asin(
math.asinh(
math.atan(
math.atan2(
math.atanh(
math.cbrt(
math.ceil(
math.comb(
math.copysign(
math.cos(
math.cosh(
math.degrees(
math.dist(
math.e
math.erf(
math.erfc(
math.exp(
math.exp2(
math.expm1(
math.fabs(
math.factorial(
math.floor(
math.fmod(
math.frexp(
math.fsum(
math.gamma(
math.gcd(
math.hypot(
math.inf
math.isclose(
math.isfinite(
math.isinf(
math.isnan(
math.isqrt(
math.lcm(
math.ldexp(
math.lgamma(
math.log(
math.log10(
math.log1p(
math.log2(
math.modf(
math.nan
math.nextafter(
math.perm(
math.pi
math.pow(
math.prod(
math.radians(
math.remainder(
math.sin(
math.sinh(
math.sqrt(
math.tan(
math.tanh(
math.tau
math.trunc(
math.ulp(
--- import operator (py3.11.7/darwin/root module) ---
operator
operator.abs(
operator.add(
operator.and_(
operator.attrgetter(
operator.call(
operator.concat(
operator.contains(
operator.countOf(
operator.delitem(
operator.eq(
operator.floordiv(
operator.ge(
operator.getitem(
operator.gt(
operator.iadd(
operator.iand(
operator.iconcat(
operator.ifloordiv(
operator.ilshift(
operator.imatmul(
operator.imod(
operator.imul(
operator.index(
operator.indexOf(
operator.inv(
operator.invert(
operator.ior(
operator.ipow(
operator.irshift(
operator.is_(
operator.is_not(
operator.isub(
operator.itemgetter(
operator.itruediv(
operator.ixor(
operator.le(
operator.length_hint(
operator.lshift(
operator.lt(
operator.matmul(
operator.methodcaller(
operator.mod(
operator.mul(
operator.ne(
operator.neg(
operator.not_(
operator.or_(
operator.pos(
operator.pow(
operator.rshift(
operator.setitem(
operator.sub(
operator.truediv(
operator.truth(
operator.xor(
--- import os (py3.11.7/darwin/root module) ---
os
os.abc
os.abort(
os.access(
os.altsep
os.chdir(
os.chflags(
os.chmod(
os.chown(
os.chroot(
os.close(
os.closerange(
os.confstr(
os.confstr_names
os.cpu_count(
os.ctermid(
os.curdir
os.defpath
os.device_encoding(
os.devnull
os.dup(
os.dup2(
os.environ
os.environb
os.error
os.execl(
os.execle(
os.execlp(
os.execlpe(
os.execv(
os.execve(
os.execvp(
os.execvpe(
os.extsep
os.fchdir(
os.fchmod(
os.fchown(
os.fdopen(
os.fork(
os.forkpty(
os.fpathconf(
os.fsdecode(
os.fsencode(
os.fspath(
os.fstat(
os.fstatvfs(
os.fsync(
os.ftruncate(
os.fwalk(
os.get_blocking(
os.get_exec_path(
os.get_inheritable(
os.get_terminal_size(
os.getcwd(
os.getcwdb(
os.getegid(
os.getenv(
os.getenvb(
os.geteuid(
os.getgid(
os.getgrouplist(
os.getgroups(
os.getloadavg(
os.getlogin(
os.getpgid(
os.getpgrp(
os.getpid(
os.getppid(
os.getpriority(
os.getsid(
os.getuid(
os.initgroups(
os.isatty(
os.kill(
os.killpg(
os.lchflags(
os.lchmod(
os.lchown(
os.linesep
os.link(
os.listdir(
os.lockf(
os.login_tty(
os.lseek(
os.lstat(
os.major(
os.makedev(
os.makedirs(
os.minor(
os.mkdir(
os.mkfifo(
os.mknod(
os.name
os.nice(
os.open(
os.openpty(
os.pardir
os.path
os.pathconf(
os.pathconf_names
os.pathsep
os.pipe(
os.popen(
os.posix_spawn(
os.posix_spawnp(
os.pread(
os.preadv(
os.putenv(
os.pwrite(
os.pwritev(
os.read(
os.readlink(
os.readv(
os.register_at_fork(
os.remove(
os.removedirs(
os.rename(
os.renames(
os.replace(
os.rmdir(
os.scandir(
os.sched_get_priority_max(
os.sched_get_priority_min(
os.sched_yield(
os.sendfile(
os.sep
os.set_blocking(
os.set_inheritable(
os.setegid(
os.seteuid(
os.setgid(
os.setgroups(
os.setpgid(
os.setpgrp(
os.setpriority(
os.setregid(
os.setreuid(
os.setsid(
os.setuid(
os.spawnl(
os.spawnle(
os.spawnlp(
os.spawnlpe(
os.spawnv(
os.spawnve(
os.spawnvp(
os.spawnvpe(
os.st
os.stat(
os.stat_result(
os.statvfs(
os.statvfs_result(
os.strerror(
os.supports_bytes_environ
os.supports_dir_fd
os.supports_effective_ids
os.supports_fd
os.supports_follow_symlinks
os.symlink(
os.sync(
os.sys
os.sysconf(
os.sysconf_names
os.system(
os.tcgetpgrp(
os.tcsetpgrp(
os.terminal_size(
os.times(
os.times_result(
os.truncate(
os.ttyname(
os.umask(
os.uname(
os.uname_result(
os.unlink(
os.unsetenv(
os.urandom(
os.utime(
os.wait(
os.wait3(
os.wait4(
os.waitpid(
os.waitstatus_to_exitcode(
os.walk(
os.write(
os.writev(
os.CLD_CONTINUED
os.CLD_DUMPED
os.CLD_EXITED
os.CLD_KILLED
os.CLD_STOPPED
os.CLD_TRAPPED
os.DirEntry(
os.EX_CANTCREAT
os.EX_CONFIG
os.EX_DATAERR
os.EX_IOERR
os.EX_NOHOST
os.EX_NOINPUT
os.EX_NOPERM
os.EX_NOUSER
os.EX_OK
os.EX_OSERR
os.EX_OSFILE
os.EX_PROTOCOL
os.EX_SOFTWARE
os.EX_TEMPFAIL
os.EX_UNAVAILABLE
os.EX_USAGE
os.F_LOCK
os.F_OK
os.F_TEST
os.F_TLOCK
os.F_ULOCK
os.GenericAlias(
os.Mapping(
os.MutableMapping(
os.NGROUPS_MAX
os.O_ACCMODE
os.O_APPEND
os.O_ASYNC
os.O_CLOEXEC
os.O_CREAT
os.O_DIRECTORY
os.O_DSYNC
os.O_EVTONLY
os.O_EXCL
os.O_EXEC
os.O_EXLOCK
os.O_FSYNC
os.O_NDELAY
os.O_NOCTTY
os.O_NOFOLLOW
os.O_NOFOLLOW_ANY
os.O_NONBLOCK
os.O_RDONLY
os.O_RDWR
os.O_SEARCH
os.O_SHLOCK
os.O_SYMLINK
os.O_SYNC
os.O_TRUNC
os.O_WRONLY
os.POSIX_SPAWN_CLOSE
os.POSIX_SPAWN_DUP2
os.POSIX_SPAWN_OPEN
os.PRIO_PGRP
os.PRIO_PROCESS
os.PRIO_USER
os.P_ALL
os.P_NOWAIT
os.P_NOWAITO
os.P_PGID
os.P_PID
os.P_WAIT
os.PathLike(
os.RTLD_GLOBAL
os.RTLD_LAZY
os.RTLD_LOCAL
os.RTLD_NODELETE
os.RTLD_NOLOAD
os.RTLD_NOW
os.R_OK
os.SCHED_FIFO
os.SCHED_OTHER
os.SCHED_RR
os.SEEK_CUR
os.SEEK_DATA
os.SEEK_END
os.SEEK_HOLE
os.SEEK_SET
os.ST_NOSUID
os.ST_RDONLY
os.TMP_MAX
os.WCONTINUED
os.WCOREDUMP(
os.WEXITED
os.WEXITSTATUS(
os.WIFCONTINUED(
os.WIFEXITED(
os.WIFSIGNALED(
os.WIFSTOPPED(
os.WNOHANG
os.WNOWAIT
os.WSTOPPED
os.WSTOPSIG(
os.WTERMSIG(
os.WUNTRACED
os.W_OK
os.X_OK
--- import os.path ---
os.path
os.path.abspath(
os.path.altsep
os.path.basename(
os.path.commonpath(
os.path.commonprefix(
os.path.curdir
os.path.defpath
os.path.devnull
os.path.dirname(
os.path.exists(
os.path.expanduser(
os.path.expandvars(
os.path.extsep
os.path.genericpath
os.path.getatime(
os.path.getctime(
os.path.getmtime(
os.path.getsize(
os.path.isabs(
os.path.isdir(
os.path.isfile(
os.path.islink(
os.path.ismount(
os.path.join(
os.path.lexists(
os.path.normcase(
os.path.normpath(
os.path.os
os.path.pardir
os.path.pathsep
os.path.realpath(
os.path.relpath(
os.path.samefile(
os.path.sameopenfile(
os.path.samestat(
os.path.sep
os.path.split(
os.path.splitdrive(
os.path.splitext(
os.path.stat
os.path.supports_unicode_filenames
os.path.sys
--- from os import path ---
path
path.abspath(
path.altsep
path.basename(
path.commonpath(
path.commonprefix(
path.curdir
path.defpath
path.devnull
path.dirname(
path.exists(
path.expanduser(
path.expandvars(
path.extsep
path.genericpath
path.getatime(
path.getctime(
path.getmtime(
path.getsize(
path.isabs(
path.isdir(
path.isfile(
path.islink(
path.ismount(
path.join(
path.lexists(
path.normcase(
path.normpath(
path.os
path.pardir
path.pathsep
path.realpath(
path.relpath(
path.samefile(
path.sameopenfile(
path.samestat(
path.sep
path.split(
path.splitdrive(
path.splitext(
path.stat
path.supports_unicode_filenames
path.sys
--- import pprint (py3.11.7/darwin/root module) ---
pprint
pprint.isreadable(
pprint.isrecursive(
pprint.pformat(
pprint.pp(
pprint.pprint(
pprint.re
pprint.saferepr(
pprint.PrettyPrinter(
--- import random (py3.11.7/darwin/root module) ---
random
random.betavariate(
random.choice(
random.choices(
random.expovariate(
random.gammavariate(
random.gauss(
random.getrandbits(
random.getstate(
random.lognormvariate(
random.normalvariate(
random.paretovariate(
random.randbytes(
random.randint(
random.random(
random.randrange(
random.sample(
random.seed(
random.setstate(
random.shuffle(
random.triangular(
random.uniform(
random.vonmisesvariate(
random.weibullvariate(
random.BPF
random.LOG4
random.NV_MAGICCONST
random.RECIP_BPF
random.Random(
random.SG_MAGICCONST
random.SystemRandom(
random.TWOPI
--- import re (2.2.1/py3.11.7/darwin/root module) ---
re
re.compile(
re.copyreg
re.enum
re.error
re.escape(
re.findall(
re.finditer(
re.fullmatch(
re.functools
re.match(
re.purge(
re.search(
re.split(
re.sub(
re.subn(
re.template(
re.A
re.ASCII
re.DEBUG
re.DOTALL
re.I
re.IGNORECASE
re.L
re.LOCALE
re.M
re.MULTILINE
re.Match(
re.NOFLAG
re.Pattern(
re.RegexFlag(
re.S
re.Scanner(
re.T
re.TEMPLATE
re.U
re.UNICODE
re.VERBOSE
re.X
--- import string (py3.11.7/darwin/root module) ---
string
string.ascii_letters
string.ascii_lowercase
string.ascii_uppercase
string.capwords(
string.digits
string.hexdigits
string.octdigits
string.printable
string.punctuation
string.whitespace
string.Formatter(
string.Template(
--- import sys (py3.11.7/darwin/root module) ---
sys
sys.abiflags
sys.addaudithook(
sys.api_version
sys.argv
sys.audit(
sys.base_exec_prefix
sys.base_prefix
sys.breakpointhook(
sys.builtin_module_names
sys.byteorder
sys.call_tracing(
sys.copyright
sys.displayhook(
sys.dont_write_bytecode
sys.exc_info(
sys.excepthook(
sys.exception(
sys.exec_prefix
sys.executable
sys.exit(
sys.flags
sys.float_info
sys.float_repr_style
sys.get_asyncgen_hooks(
sys.get_coroutine_origin_tracking_depth(
sys.get_int_max_str_digits(
sys.getallocatedblocks(
sys.getdefaultencoding(
sys.getdlopenflags(
sys.getfilesystemencodeerrors(
sys.getfilesystemencoding(
sys.getprofile(
sys.getrecursionlimit(
sys.getrefcount(
sys.getsizeof(
sys.getswitchinterval(
sys.gettrace(
sys.hash_info
sys.hexversion
sys.implementation
sys.int_info
sys.intern(
sys.is_finalizing(
sys.maxsize
sys.maxunicode
sys.meta_path
sys.modules
sys.orig_argv
sys.path
sys.path_hooks
sys.path_importer_cache
sys.platform
sys.platlibdir
sys.prefix
sys.pycache_prefix
sys.set_asyncgen_hooks(
sys.set_coroutine_origin_tracking_depth(
sys.set_int_max_str_digits(
sys.setdlopenflags(
sys.setprofile(
sys.setrecursionlimit(
sys.setswitchinterval(
sys.settrace(
sys.stderr
sys.stdin
sys.stdlib_module_names
sys.stdout
sys.thread_info
sys.unraisablehook(
sys.version
sys.version_info
sys.warnoptions
--- import time (py3.11.7/darwin/root module) ---
time
time.altzone
time.asctime(
time.clock_getres(
time.clock_gettime(
time.clock_gettime_ns(
time.clock_settime(
time.clock_settime_ns(
time.ctime(
time.daylight
time.get_clock_info(
time.gmtime(
time.localtime(
time.mktime(
time.monotonic(
time.monotonic_ns(
time.perf_counter(
time.perf_counter_ns(
time.process_time(
time.process_time_ns(
time.sleep(
time.strftime(
time.strptime(
time.struct_time(
time.thread_time(
time.thread_time_ns(
time.time(
time.time_ns(
time.timezone
time.tzname
time.tzset(
time.CLOCK_MONOTONIC
time.CLOCK_MONOTONIC_RAW
time.CLOCK_PROCESS_CPUTIME_ID
time.CLOCK_REALTIME
time.CLOCK_THREAD_CPUTIME_ID
time.CLOCK_UPTIME_RAW
--- import traceback (py3.11.7/darwin/root module) ---
traceback
traceback.clear_frames(
traceback.collections
traceback.extract_stack(
traceback.extract_tb(
traceback.format_exc(
traceback.format_exception(
traceback.format_exception_only(
traceback.format_list(
traceback.format_stack(
traceback.format_tb(
traceback.itertools
traceback.linecache
traceback.print_exc(
traceback.print_exception(
traceback.print_last(
traceback.print_list(
traceback.print_stack(
traceback.print_tb(
traceback.suppress(
traceback.sys
traceback.textwrap
traceback.walk_stack(
traceback.walk_tb(
traceback.FrameSummary(
traceback.StackSummary(
traceback.TracebackException(
