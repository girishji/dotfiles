-- useful shortcuts
vector<int>
vector<
vector<vector<int>>
vector<vector<
vector<char>
vector<string>
string
set<int>
set<
map<int, int>
map<
unordered_map<
string::npos
-- from cppreference.com
-- keywords
alignas
alignof
and
and_eq
asm
atomic_cancel
atomic_commit
atomic_noexcept
auto
bitand
bitor
bool
break;
case
catch
char
char8_t
char16_t
char32_t
class
compl
concept
const
consteval
constexpr
constinit
const_cast
continue;
co_await
co_return
co_yield
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for(
friend
goto
if(
inline
int
long
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
reflexpr
register
reinterpret_cast
requires
return
short
signed
sizeof
static
static_assert
static_cast
struct
switch
synchronized
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while(
xor
xor_eq
final
override
transaction_safe
transaction_safe_dynamic
import
module
-- memory management
unique_ptr
shared_ptr
weak_ptr
-- vector
front()
back()
data()
begin()
cbegin()
end()
cend()
rbegin()
crbegin()
rend()
crend()
empty()
size()
max_size()
reserve(
capacity(
shrink_to_fit()
clear()
insert(
insert_range(
emplace(
erase()
push_back(
emplace_back(
append_range(
pop_back(
resize(
swap(
-- list and deque
push_front(
emplace_front(
prepend_range(
pop_front(
splice(
remove(
remove_if(
reverse(
unique(
sort(
-- map and set
insert_or_assign(
emplace_hint(
try_emplace(
extract(
merge(
count()
find(
contains(
equal_range(
lower_bound(
upper_bound(
key_comp(
value_comp(
-- string
assign(
assign_range(
c_str(
length(
append(
replace_with_range(
resize_and_overwrite(
find(
rfind(
find_first_of(
find_first_not_of(
find_last_of(
find_last_not_of(
compare(
starts_with(
ends_with(
substr(
-- constrained algorithms (ranges algorithms)
ranges::all_of(
ranges::any_of(
ranges::none_of(
ranges::for_each(
ranges::for_each_n(
ranges::count(
ranges::count_if(
ranges::mismatch(
ranges::equal(
ranges::lexicographical_compare(
ranges::find(
ranges::find_if(
ranges::find_if_not(
ranges::find_last(
ranges::find_last_if(
ranges::find_last_if_not(
ranges::find_end(
ranges::find_first_of(
ranges::adjacent_find(
ranges::search(
ranges::search_n(
ranges::contains(
ranges::contains_subrange(
ranges::starts_with(
ranges::ends_with(
ranges::copy(
ranges::copy_if(
ranges::copy_n(
ranges::copy_backward(
ranges::move(
ranges::move_backward(
ranges::fill(
ranges::fill_n(
ranges::transform(
ranges::generate(
ranges::generate_n(
ranges::remove(
ranges::remove_if(
ranges::remove_copy(
ranges::remove_copy_if(
ranges::replace(
ranges::replace_if(
ranges::replace_copy(
ranges::replace_copy_if(
ranges::swap_ranges(
ranges::reverse(
ranges::reverse_copy(
ranges::rotate(
ranges::rotate_copy(
ranges::shuffle(
ranges::shift_left(
ranges::shift_right(
ranges::sample(
ranges::unique(
ranges::unique_copy(
ranges::is_partitioned(
ranges::partition(
ranges::partition_copy(
ranges::stable_partition(
ranges::partition_point(
ranges::is_sorted(
ranges::is_sorted_until(
ranges::sort(
ranges::partial_sort(
ranges::partial_sort_copy(
ranges::stable_sort(
ranges::nth_element(
ranges::lower_bound(
ranges::upper_bound(
ranges::binary_search(
ranges::equal_range(
ranges::merge(
ranges::inplace_merge(
ranges::includes(
ranges::set_difference(
ranges::set_intersection(
ranges::set_symmetric_difference(
ranges::set_union(
ranges::is_heap(
ranges::is_heap_until(
ranges::make_heap(
ranges::push_heap(
ranges::pop_heap(
ranges::sort_heap(
ranges::max(
ranges::max_element(
ranges::min(
ranges::min_element(
ranges::minmax(
ranges::minmax_element(
ranges::clamp(
ranges::is_permutation(
ranges::next_permutation(
ranges::prev_permutation(
ranges::iota(
ranges::fold_left(
ranges::fold_left_first(
ranges::fold_right(
ranges::fold_right_last(
ranges::fold_left_with_iter(
ranges::fold_left_first_with_iter(
ranges::uninitialized_copy(
ranges::uninitialized_copy_n(
ranges::uninitialized_fill(
ranges::uninitialized_fill_n(
ranges::uninitialized_move(
ranges::uninitialized_move_n(
ranges::uninitialized_default_construct(
ranges::uninitialized_default_construct_n(
ranges::uninitialized_value_construct(
ranges::uninitialized_value_construct_n(
ranges::destroy(
ranges::destroy_n(
ranges::destroy_at(
ranges::construct_at(
ranges::generate_random(
ranges::in_fun_result(
ranges::in_in_result(
ranges::in_out_result(
ranges::in_in_out_result(
ranges::in_out_out_result(
ranges::min_max_result(
ranges::in_found_result(
ranges::in_value_result(
ranges::out_value_result(
-- iterator library
reverse_iterator(
make_reverse_iterator(
back_insert_iterator(
back_inserter(
front_insert_iterator(
front_inserter(
insert_iterator(
inserter(
basic_const_iterator(
const_iterator(
const_sentinel(
make_const_iterator(
make_const_sentinel(
move_iterator(
move_sentinel(
make_move_iterator(
common_iterator(
default_sentinel_t(
counted_iterator(
unreachable_sentinel_t(
istream_iterator(
ostream_iterator(
istreambuf_iterator(
ostreambuf_iterator(
advance(
distance(
next(
prev(
ranges::advance(
ranges::distance(
ranges::next(
ranges::prev(
